<scxml datamodel="native" initial="dark" version="1.0">

    

      <state id="dark">
        <transition event="light" cond="_event->data.light > LIGHT_THRES" target="light" />
        <onentry>
          <script><![CDATA[
            for (char i = 0; i < 4; ++i) {
              digitalWrite(pump[i], PUMP_OFF);
            }
          ]]></script>
        </onentry>
      </state>
    

      <state id="light">
        <transition event="light" cond="_event->data.light &lt; LIGHT_THRES" target="dark" />
    
        <invoke type="capsense" id="cap" />
    
        <state id="idle">
          <transition event="pump1" cond="soil[0] &lt; 0 &amp;&amp;
                                         soil[0] &lt;= soil[1] &amp;&amp;
                                         soil[0] &lt;= soil[2] &amp;&amp;
                                         soil[0] &lt;= soil[3]" target="pump1" />
          <transition event="pump1" target="pump1" />
          <transition event="pump1" cond="COOLER" target="pump1" />
          <transition event="pump2" cond="soil[1] &lt; 0 &amp;&amp;
                                         soil[1] &lt;= soil[0] &amp;&amp;
                                         soil[1] &lt;= soil[2] &amp;&amp;
                                         soil[1] &lt;= soil[3]" target="pump2" />
          <transition event="pump3" cond="soil[2] &lt; 0 &amp;&amp;
                                         soil[2] &lt;= soil[0] &amp;&amp;
                                         soil[2] &lt;= soil[1] &amp;&amp;
                                         soil[2] &lt;= soil[3]" target="pump3" />
          <transition event="pump4" cond="soil[3] &lt; 0 &amp;&amp;
                                         soil[3] &lt;= soil[0] &amp;&amp;
                                         soil[3] &lt;= soil[1] &amp;&amp;
                                         soil[3] &lt;= soil[2]" target="pump4" />
        </state>
        
        <state id="pumping">
          <transition event="idle" target="idle" />
          <onentry>
            <send delay="8000ms" event="idle" />
          </onentry>
    
          <state id="pump1">
            <invoke type="pump" id="1" />
          </state>
          <state id="pump2">
            <invoke type="pump" id="2" />
          </state>
          <state id="pump3">
            <invoke type="pump" id="3" />
          </state>
          <state id="pump4">
            <invoke type="pump" id="4" />
          </state>
        </state>
      </state>
    </scxml>